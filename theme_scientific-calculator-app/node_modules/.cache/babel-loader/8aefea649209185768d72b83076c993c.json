{"ast":null,"code":"var _jsxFileName = \"/Users/anikraj/Downloads/engagePulse/calculator-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCalculation, clearCalculation } from './actions';\nimport CalcButton from './components/CalcButton';\n\nclass CalculatorComponent extends Component {\n  componentDidMount() {\n    // Force scroll on the display\n    // I do this on mount in case reducer is already populated\n    this._forceScrollOnDisplay();\n  }\n\n  componentDidUpdate() {\n    // Force scroll on the display\n    // this function gets called on component update\n    this._forceScrollOnDisplay();\n  } // Replace the operator chars add a span for styling\n  // and replace division and multiplication symbols\n\n\n  _replaceChars(value) {\n    value = value.join(\"\");\n    value = value.replace(/\\//g, '<span class=\"operatorStyle\">รท</span>');\n    value = value.replace(/\\*/g, '<span class=\"operatorStyle\">ร</span>');\n    value = value.replace(/\\+/g, '<span class=\"operatorStyle\">+</span>');\n    value = value.replace(/-/g, '<span class=\"operatorStyle\">-</span>');\n    return value;\n  }\n\n  _forceScrollOnDisplay() {\n    // Force scroll on div, put a value in here\n    // instead of calculating the offset\n    // This keeps the latest numbers in display\n    this.refs.calculationDisplay.scrollLeft = 10000;\n    this.refs.resultDisplay.scrollLeft = 10000;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calculator-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: \"calculationDisplay\",\n      className: \"calculationDisplay\",\n      dangerouslySetInnerHTML: {\n        __html: this.props.calculation.length ? this._replaceChars(this.props.calculation) : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      ref: \"resultDisplay\",\n      className: \"resultDisplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.result)), React.createElement(\"div\", {\n      className: \"calculator-inputs-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(CalcButton, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: \"Add(+)\",\n      additionalClass: \"operator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"calculator-inputs-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CalcButton, {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: \"Subtract(-)\",\n      additionalClass: \"operator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"calculator-inputs-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CalcButton, {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: \"Multiply(*)\",\n      additionalClass: \"operator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"calculator-inputs-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CalcButton, {\n      value: \"clear\",\n      additionalClass: \"clear\",\n      onClick: () => this.props.clearCalculation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: 0,\n      additionalClass: \"zero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: \"=\",\n      additionalClass: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(CalcButton, {\n      value: \"Divide(/)\",\n      additionalClass: \"operator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCalculation: (inputValue, currentState, currentResult) => dispatch(updateCalculation(inputValue, currentState, currentResult)),\n  clearCalculation: () => dispatch(clearCalculation())\n});\n\nconst mapStateToProps = state => ({\n  calculation: state.calculation,\n  result: state.result\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalculatorComponent);","map":{"version":3,"sources":["/Users/anikraj/Downloads/engagePulse/calculator-app/src/App.js"],"names":["React","Component","connect","updateCalculation","clearCalculation","CalcButton","CalculatorComponent","componentDidMount","_forceScrollOnDisplay","componentDidUpdate","_replaceChars","value","join","replace","refs","calculationDisplay","scrollLeft","resultDisplay","render","__html","props","calculation","length","result","mapDispatchToProps","dispatch","inputValue","currentState","currentResult","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCalculation, clearCalculation } from './actions';\nimport CalcButton from './components/CalcButton';\n\nclass CalculatorComponent extends Component {\n\n  componentDidMount() {\n    // Force scroll on the display\n    // I do this on mount in case reducer is already populated\n    this._forceScrollOnDisplay();\n  }\n  \n  componentDidUpdate() {\n    // Force scroll on the display\n    // this function gets called on component update\n    this._forceScrollOnDisplay();\n  }\n\n  // Replace the operator chars add a span for styling\n  // and replace division and multiplication symbols\n  _replaceChars(value) {\n    value = value.join(\"\");\n    value = value.replace(/\\//g, '<span class=\"operatorStyle\">รท</span>');\n    value = value.replace(/\\*/g, '<span class=\"operatorStyle\">ร</span>');\n    value = value.replace(/\\+/g, '<span class=\"operatorStyle\">+</span>');\n    value = value.replace(/-/g, '<span class=\"operatorStyle\">-</span>');\n    return value;\n  }\n\n  _forceScrollOnDisplay() {\n    // Force scroll on div, put a value in here\n    // instead of calculating the offset\n    // This keeps the latest numbers in display\n    this.refs.calculationDisplay.scrollLeft = 10000;\n    this.refs.resultDisplay.scrollLeft = 10000;\n  }\n\n  render() {\n    return (\n        <div className='calculator'>\n          <div className='calculator-results'>\n            <div ref='calculationDisplay' className='calculationDisplay' dangerouslySetInnerHTML={{ __html: this.props.calculation.length ? this._replaceChars(this.props.calculation) : 0 }} />\n            <div ref='resultDisplay' className='resultDisplay'>{this.props.result}</div>\n          </div>\n          \n          <div className='calculator-inputs-row'>\n            <CalcButton value={1} />\n            <CalcButton value={2} />\n            <CalcButton value={3} />\n            <CalcButton value=\"Add(+)\" additionalClass=\"operator\" />\n          </div>\n          \n          <div className='calculator-inputs-row'>\n            <CalcButton value={4} />\n            <CalcButton value={5} />\n            <CalcButton value={6} />\n            <CalcButton value='Subtract(-)' additionalClass=\"operator\" />\n          </div>\n          <div className='calculator-inputs-row'>\n            <CalcButton value={7} />\n            <CalcButton value={8} />\n            <CalcButton value={9} />\n            <CalcButton value='Multiply(*)' additionalClass=\"operator\" />\n          </div>\n          <div className='calculator-inputs-row'>\n            <CalcButton value='clear' additionalClass=\"clear\" onClick={() => this.props.clearCalculation()}/>\n            <CalcButton value={0} additionalClass=\"zero\" />\n            <CalcButton value='=' additionalClass=\"equal\" />\n            <CalcButton value='Divide(/)' additionalClass=\"operator\" />\n          </div>\n        </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCalculation: (inputValue, currentState, currentResult) => dispatch(updateCalculation(inputValue, currentState, currentResult)),\n  clearCalculation: () => dispatch(clearCalculation())\n});\n\nconst mapStateToProps = (state) => ({\n  calculation: state.calculation,\n  result: state.result\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalculatorComponent);\n"]},"metadata":{},"sourceType":"module"}