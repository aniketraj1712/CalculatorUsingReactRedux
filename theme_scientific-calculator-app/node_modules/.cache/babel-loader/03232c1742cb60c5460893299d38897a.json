{"ast":null,"code":"import { UPDATE_CALCULATION_AND_RESULT, CLEAR_ALL, EQUAL_TO, SIGN, SQUARE, SQUARE_ROOT } from '../constants';\nconst initialState = {\n  calculation: [0, 0],\n  result: 0\n};\n\nconst calculatorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_CALCULATION_AND_RESULT:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      };\n\n    case CLEAR_ALL:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      };\n\n    case EQUAL_TO:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      };\n\n    case SIGN:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      };\n\n    case SQUARE:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      };\n\n    case SQUARE_ROOT:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default calculatorReducer;","map":{"version":3,"sources":["/Users/anikraj/Downloads/engagePulse/scientific-calculator-app/src/reducers/index.js"],"names":["UPDATE_CALCULATION_AND_RESULT","CLEAR_ALL","EQUAL_TO","SIGN","SQUARE","SQUARE_ROOT","initialState","calculation","result","calculatorReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,6BAAT,EAAwCC,SAAxC,EAAkDC,QAAlD,EAA2DC,IAA3D,EAAgEC,MAAhE,EAAuEC,WAAvE,QAA0F,cAA1F;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAG,CAAH,CADM;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,6BAAL;AACE,aAAO;AACLO,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN,WADvB;AAELC,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFlB,OAAP;;AAIF,SAAKP,SAAL;AACE,aAAO;AACNM,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN,WADtB;AAELC,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFlB,OAAP;;AAIF,SAAKN,QAAL;AACE,aAAO;AACLK,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN,WADvB;AAELC,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFlB,OAAP;;AAIF,SAAKL,IAAL;AACE,aAAO;AACLI,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN,WADvB;AAELC,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFlB,OAAP;;AAIF,SAAKJ,MAAL;AACE,aAAO;AACLG,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN,WADvB;AAELC,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFlB,OAAP;;AAIF,SAAKH,WAAL;AACE,aAAO;AACLE,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAAP,CAAeN,WADvB;AAELC,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFlB,OAAP;;AAIF;AACE,aAAOE,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,iBAAf","sourcesContent":["import { UPDATE_CALCULATION_AND_RESULT, CLEAR_ALL,EQUAL_TO,SIGN,SQUARE,SQUARE_ROOT } from '../constants';\n\nconst initialState = {\n  calculation: [0,0],\n  result: 0\n};\n\nconst calculatorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_CALCULATION_AND_RESULT:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      };\n    case CLEAR_ALL:\n      return {\n      \tcalculation: action.payload.calculation,\n        result: action.payload.result\n      };\n    case EQUAL_TO:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      }; \n    case SIGN:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      }; \n    case SQUARE:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      }; \n    case SQUARE_ROOT:\n      return {\n        calculation: action.payload.calculation,\n        result: action.payload.result\n      };          \n    default:\n      return state;\n  }\n};\n\nexport default calculatorReducer;"]},"metadata":{},"sourceType":"module"}