{"ast":null,"code":"var _jsxFileName = \"/Users/anikraj/Downloads/engagePulse/theme_scientific-calculator-app/src/components/CalcButton.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCalculation, clearCalculation, equalToCalculation } from '../actions';\n\nclass CalcButtonComponent extends Component {\n  render() {\n    return React.createElement(\"button\", {\n      className: \"calc-input \".concat(this.props.additionalClass),\n      onClick: () => {\n        this.props.additionalClass === \"clear\" ? this.props.clearCalculation() : this.props.additionalClass === \"equal\" ? this.props.equalToCalculation(this.props.result) : this.props.updateCalculation(this.props.value, this.props.calculation, this.props.result);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, this.props.text ? this.props.text : this.props.value);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCalculation: (inputValue, currentState, currentResult) => dispatch(updateCalculation(inputValue, currentState, currentResult)),\n  clearCalculation: () => dispatch(clearCalculation()),\n  equalToCalculation: currentResult => dispatch(equalToCalculation(currentResult))\n});\n\nconst mapStateToProps = state => ({\n  calculation: state.calculation,\n  result: state.result\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalcButtonComponent);","map":{"version":3,"sources":["/Users/anikraj/Downloads/engagePulse/theme_scientific-calculator-app/src/components/CalcButton.js"],"names":["React","Component","connect","updateCalculation","clearCalculation","equalToCalculation","CalcButtonComponent","render","props","additionalClass","result","value","calculation","text","mapDispatchToProps","dispatch","inputValue","currentState","currentResult","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA2BC,gBAA3B,EAA4CC,kBAA5C,QAAsE,YAAtE;;AAEA,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AAC1CM,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,uBAAgB,KAAKC,KAAL,CAAWC,eAA3B,CADX;AAEE,MAAA,OAAO,EAAE,MAAK;AAAC,aAAKD,KAAL,CAAWC,eAAX,KAA6B,OAA7B,GAAuC,KAAKD,KAAL,CAAWJ,gBAAX,EAAvC,GAAuE,KAAKI,KAAL,CAAWC,eAAX,KAA6B,OAA7B,GAAuC,KAAKD,KAAL,CAAWH,kBAAX,CAA8B,KAAKG,KAAL,CAAWE,MAAzC,CAAvC,GAA0F,KAAKF,KAAL,CAAWL,iBAAX,CAA6B,KAAKK,KAAL,CAAWG,KAAxC,EAA+C,KAAKH,KAAL,CAAWI,WAA1D,EAAuE,KAAKJ,KAAL,CAAWE,MAAlF,CAAjK;AAA2P,OAF5Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKF,KAAL,CAAWK,IAAX,GAAkB,KAAKL,KAAL,CAAWK,IAA7B,GAAoC,KAAKL,KAAL,CAAWG,KAHlD,CADF;AAOD;;AATyC;;AAY5C,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,iBAAiB,EAAE,CAACa,UAAD,EAAaC,YAAb,EAA2BC,aAA3B,KAA6CH,QAAQ,CAACZ,iBAAiB,CAACa,UAAD,EAAaC,YAAb,EAA2BC,aAA3B,CAAlB,CADhC;AAExCd,EAAAA,gBAAgB,EAAE,MAAIW,QAAQ,CAACX,gBAAgB,EAAjB,CAFU;AAGxCC,EAAAA,kBAAkB,EAAGa,aAAD,IAAiBH,QAAQ,CAACV,kBAAkB,CAACa,aAAD,CAAnB;AAHL,CAAf,CAA3B;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,WAAW,EAAEQ,KAAK,CAACR,WADe;AAElCF,EAAAA,MAAM,EAAEU,KAAK,CAACV;AAFoB,CAAZ,CAAxB;;AAKA,eAAeR,OAAO,CAACiB,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CR,mBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCalculation,clearCalculation,equalToCalculation } from '../actions';\n\nclass CalcButtonComponent extends Component {\n  render() {\n    return (\n      <button\n        className={`calc-input ${this.props.additionalClass}`} \n        onClick={() =>{this.props.additionalClass===\"clear\" ? this.props.clearCalculation() : this.props.additionalClass===\"equal\" ? this.props.equalToCalculation(this.props.result) : this.props.updateCalculation(this.props.value, this.props.calculation, this.props.result)}}>\n        {this.props.text ? this.props.text : this.props.value}\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCalculation: (inputValue, currentState, currentResult) => dispatch(updateCalculation(inputValue, currentState, currentResult)),\n  clearCalculation: ()=>dispatch(clearCalculation()),\n  equalToCalculation: (currentResult)=>dispatch(equalToCalculation(currentResult))\n});\n\nconst mapStateToProps = (state) => ({\n  calculation: state.calculation,\n  result: state.result\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalcButtonComponent);"]},"metadata":{},"sourceType":"module"}